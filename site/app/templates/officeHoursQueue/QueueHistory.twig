<div id="queue_history">
  <br>
  <h2>Today's History
    {% if viewer.getFullHistory() %}
      <a id="view_history_button" role="button" class="btn btn-default" href="{{base_url}}?full_history=false">
        View Limited History
      </a>
    {% else %}
      <a id="view_history_button" role="button" class="btn btn-default" href="{{base_url}}?full_history=true">
        View Full History
      </a>
    {% endif %}
  </h2>
  <table class="table table-striped" style="width:100%;">
    <thead>
      <tr>
        <th scope="col">#</th>
        <th scope="col">Name</th>
        <th scope="col">Queue</th>
        <th scope="col">Time Entered</th>
        <th scope="col">Time In Queue</th>
        <th scope="col">Time Helped</th>
        <th scope="col">Times Helped Today</th>
        <th scope="col">Times Helped this week</th>
      
        <th scope="col">
            <a href="#" onclick="toggleSort('HelpStartedBy')">Helped Started By
                <span id="sortIndicator"></span>
            </a>
        </th>

        <th scope="col" class="mobile-hide">Removed By</th>

        {% if viewer.isGrader() %}
          <th scope="col">Restore</th>
        {% endif %}
      </tr>
    </thead>
    <tbody>
      {% set history_count = 0 %}
      {% for entry in viewer.getPastQueue() %}
        {% if (history_count < 25 or viewer.getFullHistory()) and (viewer.isGrader() or entry['user_id'] == viewer.getUserId()) %}
          {% set history_count = history_count + 1 %}
          <tr class="queue_history_{{entry['queue_code']}} queue_history_row">
            <th scope="row">{{history_count}}</th>
            <td>
              {{ entry['name'] }}
              <a onclick="unhideId(this, '{{ entry['user_id'] }}')" onkeypress="unhideId(this, '{{ entry['user_id'] }}')" title="Show user id" aria-label="Show user id" tabindex="0">
                <i class="fas fa-eye"></i>
              </a>
            </td>
            <td>{{ entry['queue_code'] }}</td>
            <td>{{ viewer.timeToHM(entry['time_in']) }}</td>

            <td>{{ viewer.getTimeWaitingInQueue(entry['time_out'],entry['time_help_start'],entry['time_in'],entry['removal_type']) }}</td>

            {% if entry['removal_type'] == 'helped' or entry['removal_type'] == 'self_helped' %}
              <td>{{viewer.getTimeBeingHelped(entry['time_out'],entry['time_help_start'])}}</td>
            {% elseif entry['removal_type'] == 'removed' %}
              <td>Removed</td>
            {% elseif entry['removal_type'] == 'self' %}
              <td>Left Queue</td>
            {% elseif entry['removal_type'] == 'emptied' %}
              <td>Queue Emptied</td>
            {% else %}
              <td>Not in queue</td>
            {% endif %}

            <td>{{ entry['helped_today'] }}</td>
            <td>{{ entry['times_helped'] }}</td>
            <td class="mobile-hide">{{ entry['help_started_by'] }}</td> 


            {% if entry['removal_type'] == 'self' %}
              <td class="mobile-hide"></td>
            {% else %}
              <td class="mobile-hide">{{ viewer.getRemoverName(entry) }}</td>
            {% endif %}
            {% if viewer.isGrader() %}
              <td>
                <form method="post" action="{{base_url}}/{{entry['queue_code'] | url_encode }}/restore" onsubmit="return confirm('Are you sure you want to restore {{ entry['name'] }} to the queue?');">
                  <input type="hidden" name="csrf_token" value="{{ csrf_token }}"/>
                  <input type="hidden" name="entry_id" value="{{entry['entry_id']}}"/>

                  <button type="submit" class="btn btn-danger queue_restore_btn">Restore</button>
                </form>
              </td>
            {% endif %}
          </tr>
        {% endif %}
      {% endfor %}
    </tbody>
  </table>
</div>

<script>

    document.addEventListener('DOMContentLoaded', function() {
      var sortIndicator = document.getElementById('sortIndicator');
      if(Cookies.get('sortStateTimeEntered')=='up'){
        //sortIndicator.innerText = "â–²";
        sortIndicator.innerHTML = '<i class="fas fa-sort-up"></i>'
      }
      if(Cookies.get('sortStateTimeEntered')=='off'){
        sortIndicator.innerText = "";
      }
      if(Cookies.get('sortStateTimeEntered')=='down'){
        sortIndicator.innerHTML = '<i class="fas fa-sort-down"></i>';
      }
    });

    function toggleSort(column) {//per click actions handler
        if (column == 'HelpStartedBy') {
            if (Cookies.get('sortStateTimeEntered') == "off") {
                Cookies.set('sortStateTimeEntered', 'up'); // Save to cookie
                sortIndicator.innerHTML = '<i class="fas fa-sort-up"></i>'
            } else if (Cookies.get('sortStateTimeEntered') == "up") {
                Cookies.set('sortStateTimeEntered', 'down'); // Save to cookie
                sortIndicator.innerHTML = '<i class="fas fa-sort-down"></i>';
            } else if (Cookies.get('sortStateTimeEntered') == "down") {
                Cookies.set('sortStateTimeEntered', 'off'); // Save to cookie
                sortIndicator.innerText = ""; // Reset to down arrow for off state
                console.log(Cookies.get('sortStateTimeEntered'))
            }
        }
        window.location.reload();
    }
</script>