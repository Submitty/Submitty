{% for stylesheet in localcss %}
    <link rel="stylesheet" type="text/css" href="{{ stylesheet }}"/>
{% endfor %}
{% for script in localjs %}
    <script src="{{ script }}"></script>
{% endfor %}
<div id="content-wrapper">
    <div id="grading-pdf-repair" hidden>
        <p><em>There is a problem with this pdf. Please repair to try and automatically fix any issues.</em></p>
    </div>
    <div id="viewer" class="pdfViewer"></div>
</div>

<!-- Provide template of download / view all button to copy over to toolbar since this page is the only one that gets the necessary info -->
<template id="permission-annotations-btn-template">
    {% if can_download is defined and can_download %}
        <button id="download-annotations-btn" class='btn btn-default key_to_click' onclick='downloadStudentAnnotations("{{ student_pdf_download_url }}?filename={{ filename }}&path={{ download_path|url_encode }}&anon_path={{ anon_path|url_encode }}&student_id={{ user_id }}", "{{download_path|url_encode}}", "annotated_pdfs")' aria-label="Download the file">
            Download <i class="fas fa-download" title="Download the file"></i>
        </button>
        <button id="toggle-annotations-btn" aria-label="Toggle Annotations" value="toggle-annotations" class="btn btn-default toolbar-action">Show All Annotations <i class="fas fa-eye"></i></button>
    {% endif %}
</template>

<script>
    window['csrfToken'] = "{{ csrfToken }}";
    if(typeof annotations === "undefined") {
        let annotations;
    }

    try {
        for(let i = 0 ; i < localStorage.length; i++){
            if(localStorage.key(i).includes('annotations')){
                localStorage.removeItem(localStorage.key(i));
            }
        }
        annotations = JSON.parse({{ annotation_jsons|json_encode|raw }});
    }
    catch (err) {
        console.error(err);
        alert("Can't fetch annotations");
    }
    {% if student_download is defined and student_download %}
    loadAllAnnotations(annotations, "{{ filename }}");
    download_student("{{ gradeable_id }}", "{{ user_id }}", "{{ filename | e('js') }}", "{{ file_path | e('js') }}", "{{ pdf_url_base | e('js')}}" , "{{ rerender_annotated_pdf }}");
    {% elseif student_popup is defined and student_popup %}
    loadAllAnnotations(annotations, "{{ filename }}");
    render_student("{{ gradeable_id }}", "{{ user_id }}", "{{ filename | e('js') }}", "{{ file_path | e('js') }}", "{{ pdf_url_base | e('js')}}");
    {% else %}
    loadGraderAnnotations(annotations, "{{ filename }}", "{{ grader_id }}");
    render("{{ gradeable_id }}", "{{ user_id }}", "{{ grader_id }}", '{{ filename | e('js') }}', "{{ file_path | e('js') }}", {{ page_num }}, "{{ pdf_url_base | e('js')}}");
    {% endif %}

    //render download annotations button on toolbar
    $(function() {
        if (!$('#pdf-buttons').has('#download-annotations-btn').length || !$('#pdf-buttons').has('#toggle-annotations-btn').length) {
            $('#pdf-buttons').append(document.getElementById('permission-annotations-btn-template').content.cloneNode(true));
        }
    });
    /* The function below adds a dynamic offset to annotataion pdf in order to prevent overlapping with toolbar ,
    same could not be achived through CSS as it cause the tools to hide when moved right in panel.
    This has been done taking care of resizing of panel ,platform(device),overlapping and scrolling of panels */

    if(typeof offSetter === "undefined") {
        const offSetter = new ResizeObserver(entries => {
            entries.forEach(entry => {
                let height = $(".sticky-file-info").outerHeight();
                $("#viewer").css("padding-top", height);
            });
        });
        offSetter.observe(document.querySelector(".sticky-file-info"));
    }

</script>
