<div class="content forum_content">

    {% include "forum/ForumBar.twig" with {
        "forum_bar_buttons_right" : forumBarData is defined ? forumBarData.forum_bar_buttons_right : null,
        "forum_bar_buttons_left" : forumBarData is defined ? forumBarData.forum_bar_buttons_left : null,
        "show_threads" : forumBarData is defined ? forumBarData.show_threads : false,
        "thread_exists" : false,
        "show_filter": false,
        "show_more": false
    } %}



    {% set all_categories_future = true %}

    {% for category in categories %}
        {% if category.visible_date is null or category.diff > 0 %}
            {% set all_categories_future = false %}
        {% endif %}
    {% endfor %}

    {% if all_categories_future == true %}
        <p id="empty-table" class="warning">All Categories are set to release in the future</p>
    {% endif %}






    <div id="manage-categories-view" style="margin: 0 auto; max-width: 750px; padding-bottom: 20px">
        <h3 style="margin-bottom:10px;"> Manage Categories </h3>
        <div>

        <input type="hidden" name="csrf_token" value="{{ csrf_token }}" />
        <span  style="float: right;">
                <input id="new_category_text" aria-label="New Category" placeholder="New Category" style="resize:none;" type="text" name="new_category" maxlength="50" onkeyup="checkInputMaxLength($(this))" />

                
                <input class="date_picker flatpickr-input active" placeholder=" mm / dd / yyyy " name="visible_date" id="category_visible_date" type="text">
                <script>

                    flatpickr('.date_picker', {
                        allowInput: true,
                        dateFormat: "Y-m-d",
                        onReady: (a, b, fp) => {
                            fp.calendarContainer.firstChild.childNodes[1].firstChild.firstChild.setAttribute('aria-label', 'Month');
                        }
                    });
            
                </script>

                <button type="button" title="Add new category" onclick="addNewCategory('{{ csrf_token }}');" style="margin-left:10px;" class="btn btn-primary btn-sm key_to_click" tabindex="0">
                    <i class="fas fa-plus-circle fa-1x"></i> Add category
                </button>
            </span>
        <pre>(Drag to re-order)</pre><br>
        {% if categories|length == 0 %}
            <span class='category-list-no-element' style="margin-left: 1em;" >
                    No categories exist, please create one.
                </span>
        {% endif %}

        <ul id="ui-category-list" style="padding-left: 0em;">
            {# TODO: scrollbar #}
            {% for category in categories %}
                <li id="categorylistitem-{{ category.category_id }}" 
                    class="category-sortable category-item-box" 
                    style="color: {{ category.color }};"
                    data-category_desc="{{ category.category_desc }}"
                    data-visible_date="{{ category.visible_date }}"
                    data-category_id="{{ category.category_id }}"
                >
                    <i class="fas fa-bars handle" aria-label="Drag to reorder" title="Drag to reorder"></i>
                    <span class="categorylistitem-desc">
                            <span class="categorylistitem-desc-text" style="word-wrap: break-word;">{{ category.category_desc }}</span>
                            <a class="post_button" title="Edit Category Description" aria-label="Edit Category Description"><i class="fas fa-edit category-button edit-category-desc-button"></i></a>
                        </span>
                    <span class="categorylistitem-editdesc" style="display: none;">
                            <input type="text" aria-label="New Description of Category" placeholder="New Description of Category" class="edit-category-desc-input" style="padding: 0;" maxlength="50" onkeyup="checkInputMaxLength($(this))">
                            <a class="post_button" title="Save Changes" aria-label="Save Changes"><i class="fas fa-check category-button save-desc-button"></i></a>
                            <a class="post_button" title="Cancel Changes" aria-label="Cancel Changes"><i class="fas fa-times category-button cancel-desc-button"></i></a>
                    </span>
                    <div style="float: right;width: auto;">
                        <span class="categorylistitemdate-desc">
                            <span class="categorylistitem-desc-text" style="word-wrap: break-word;"> {{ category.visible_date }}</span>
                            <i class="fas fa-edit category-button edit-category-date-button"></i>
                        </span>


                        <span class="categorylistitemdate-editdesc" style="display: none;">
                                <input type="text" aria-label="New Date for Category" placeholder=" {{ category.visible_date }} " class="edit-category-date-input" style="padding: 0;" maxlength="11" onkeyup="checkInputMaxLength($(this))">
                                <a class="post_button" title="Save Changes" aria-label="Save Changes"><i class="fas fa-check category-button save-date-button"></i></a>
                                <a class="post_button" title="Cancel Changes" aria-label="Cancel Changes"><i class="fas fa-times category-button cancel-date-button"></i></a>
                        </span>





                        <select aria-label="Category Color Picker" class='category-color-picker' style="color: white;font-size: 14px;height: 18px;padding: 0px;">
                            {% for color_name, color_code in category_colors %}
                                <option value="{{ color_code }}" style="color: white;background-color: {{ color_code }};" {% if color_code == category.color %}selected="selected"{% endif %}>{{ color_name }}</option>
                            {% endfor %}
                        </select>
                        &nbsp;
                        <a class="post_button" title="Delete Category" aria-label="Delete Category"><i class="fas fa-trash category-button delete-category-button"></i></a>
                    </div>
                </li>
            {% endfor %}
        </ul>

        </div>
    </div>
</div>

<script>
    $(function() {
        $("#ui-category-list").sortable({
            items : '.category-sortable',
            handle: ".handle",
            update: function (event, ui) {
                reorderCategories('{{ csrf_token }}');
            }
        });

        function getItem(input) {
            return $(input).closest('.category-item-box');
        }
        
        $(".delete-category-button").click(function() {
            const item = getItem(this);
            const category_id = item.data('category_id');
            const category_desc = item.data('category_desc');
            deleteCategory(category_id, category_desc, '{{ csrf_token }}');
        });

        $(".edit-category-desc-button").click(function() {
            const item = getItem(this);
            const category_desc = item.data('category_desc');
            item.find(".categorylistitem-editdesc input").val(category_desc);
            item.find(".categorylistitem-desc").hide();
            item.find(".categorylistitem-editdesc").show();

        });
        $(".edit-category-date-button").click(function() {
            const item = getItem(this);
            const category_visible_date = item.data('visible_date');
            item.find(".categorylistitemdate-editdesc input").val(category_visible_date);
            item.find(".categorylistitemdate-desc").hide();
            item.find(".categorylistitemdate-editdesc").show();

        });
        $(".cancel-desc-button").click(function() {
            const item = getItem(this);
            item.find(".categorylistitem-editdesc").hide();
            item.find(".categorylistitem-desc").show();
        });

        $(".save-date-button").click(function() {
            const item = getItem(this);
            const category_id = item.data('category_id');
            const visible_date_original = item.data('visible_date');
            const visible_date = item.find(".edit-category-date-input").val().trim();
            item.data('visible_date', visible_date);
            const category_desc = item.data('category_desc');
            if(visible_date != visible_date_original) {
                editCategory(category_id, category_desc, null, visible_date, 'date', '{{ csrf_token }}');
            }
            item.find(".categorylistitemdate-editdesc").hide();
            item.find(".categorylistitemdate-desc").show();
        });

        $(".cancel-date-button").click(function() {
            const item = getItem(this);
            item.find(".categorylistitemdate-editdesc").hide();
            item.find(".categorylistitemdate-desc").show();
        });

        $(".save-desc-button").click(function() {
            const item = getItem(this);
            const category_id = item.data('category_id');
            const category_desc_original = item.data('category_desc');
            const category_desc = item.find(".edit-category-desc-input").val().trim();
            item.data('category_desc', category_desc);
            if(category_desc != category_desc_original) {
                editCategory(category_id, category_desc, null, null, 'desc', '{{ csrf_token }}');
            }
            item.find(".categorylistitem-editdesc").hide();
            item.find(".categorylistitem-desc").show();
        });




        var refresh_color_select = function(element) {
            $(element).css("background-color",$(element).val());
        }
        $(".category-color-picker").change(function(color) {
            const item = getItem(this);
            const category_id = item.data('category_id');
            const category_desc = item.data('category_desc');
            const category_color = $(this).val();
            editCategory(category_id, category_desc, category_color, null, 'color', '{{ csrf_token }}');
            refresh_color_select($(this));
        });
        $(".category-color-picker").each(function(){
            refresh_color_select($(this));
        });
    });

    function checkInputMaxLength(obj){
        if($(obj).val().length == $(obj).attr('maxLength')){
            alert('Maximum input length reached!');
            $(obj).val($(obj).val().substr(0, $(obj).val().length));
        }
    }
</script>
