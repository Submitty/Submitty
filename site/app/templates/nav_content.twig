<script>

function updateImageData(imageData) {
    var imgElement = document.getElementById('bye');
    if (imgElement) {
        imgElement.src = "data:image/png;base64," + imageData.data;
        imgElement.alt = imageData.name + "_" + imageData.id;
    } else {
        console.error("Image element with id 'bye' not found");
    }
}

function duckTalking() {
    const imageElement = document.querySelector('#moorthy-duck');
    if (!imageElement) return;

    const bannerArray = localStorage.getItem('bannerArray');
    if (bannerArray && JSON.parse(bannerArray).length > 0 && localStorage.getItem('open') == 'false' && localStorage.getItem('duckTalking') == 'true') {
        imageElement.src = "data:image/gif;base64,{{duckGif}}";
    } else {
        imageElement.src = "{{ base_url }}/img/{{ duck_img }}";
    }
}

function initializeBanner() {
    
    var bannerArray = JSON.parse(localStorage.getItem('bannerArray'));
    var openBanner = JSON.parse(localStorage.getItem('open')); 
    var imageDataArray = {{ imageDataArray | json_encode | raw }}; 

    if (!bannerArray) {
        localStorage.setItem('bannerArray', JSON.stringify([]));
        localStorage.setItem('removedArray', JSON.stringify([]));
        localStorage.setItem('currEventIndex', 0);    
        localStorage.setItem('open', false);
    }    


    let removedArray = JSON.parse(localStorage.getItem('removedArray')) || [];

    imageDataArray.forEach(item => {
        if (!bannerArray.includes(item) && !removedArray.includes(item)) {
            bannerArray.unshift(item);
            
            localStorage.setItem('bannerArray', JSON.stringify(bannerArray));

            localStorage.setItem('currEventIndex', 0);
        }
    });


    bannerArray = JSON.parse(localStorage.getItem('bannerArray'));
    removedArray = JSON.parse(localStorage.getItem('removedArray'));
    var currEventIndex = parseInt(localStorage.getItem('currEventIndex'), 0); 

    if (bannerArray.length > 0) {
        var imageData = bannerArray[currEventIndex];
        updateImageData(imageData);
        document.getElementById('hola').style.setProperty('display', 'block', 'important');
    }
    else if (bannerArray.length <= 0) {
        localStorage.setItem('open', false); 
    }

    if (localStorage.getItem('open') === 'false') {
        localStorage.setItem('currEventIndex', 0);  
        document.getElementById('hola').style.setProperty('display', 'none');
    }


    duckTalking();
    localStorage.setItem('duckTalking', 'false');
}

document.addEventListener('DOMContentLoaded', function() {


let bannerArray = JSON.parse(localStorage.getItem('bannerArray')) || [];
let removedArray = JSON.parse(localStorage.getItem('removedArray')) || [];
var imageDataArray = {{ imageDataArray | json_encode | raw }};

//issue perhaps where we are re-adding everything. Perhaps need to check if the two items elements are the same? 

console.log("==============");
console.log("banner--");
console.log(bannerArray);
console.log("removed");
console.log(removedArray);
console.log("");

if (imageDataArray) {
    let updated = false;

    imageDataArray.forEach(item => {
        if (!bannerArray.includes(item) && !removedArray.includes(item)) {
            bannerArray.unshift(item);
            updated = true;
        }
    });

    if (updated) {
        localStorage.setItem('bannerArray', JSON.stringify(bannerArray)); 
        localStorage.setItem('currEventIndex', 0); 
    }

    duckTalking();
}







    initializeBanner();

    document.getElementById('prevButton').addEventListener('click', previousBanner);
    document.getElementById('nextButton').addEventListener('click', nextBanner);

    document.getElementById('removeButton').addEventListener('click', removeBanner);
    document.getElementById('closeButton').addEventListener('click', closeBanner);
    document.getElementById('inquireButton').addEventListener('click', inquireBanner);
});

function inquireBanner() {
    let bannerArray = JSON.parse(localStorage.getItem('bannerArray')) || [];
    let currEventIndex = parseInt(localStorage.getItem('currEventIndex'), 0); 
    var imageData = bannerArray[currEventIndex];
    if (imageData.extra_info === "" && imageData.link_name !== "") {
        window.open(imageData.link_name, '_blank');
    }
    else {
    console.log(imageData.link_name);
    displayBigBanner(imageData.extra_info, imageData.link_name)
    }

}

function closeBanner() {
    localStorage.setItem('open', 'false');   
    initializeBanner();
}

function removeBanner() {
    let bannerArray = JSON.parse(localStorage.getItem('bannerArray')) || [];
    let removedArray = JSON.parse(localStorage.getItem('removedArray')) || [];

    let currEventIndex = parseInt(localStorage.getItem('currEventIndex'), 0); 

    if (currEventIndex >= 0 && currEventIndex < bannerArray.length) {
        removedArray.push(bannerArray[currEventIndex]);
        console.log(bannerArray[currEventIndex]);

        bannerArray.splice(currEventIndex, 1);

        localStorage.setItem('bannerArray', JSON.stringify(bannerArray));
        localStorage.setItem('removedArray', JSON.stringify(removedArray));

    } else {
        console.log("Invalid index for the banner.");
    }

    initializeBanner();

}

function previousBanner() {
    var currEventIndex = parseInt(localStorage.getItem('currEventIndex'), 0); 
    var bannerArray = JSON.parse(localStorage.getItem('bannerArray')) || [];
    
    currEventIndex = (currEventIndex - 1 + bannerArray.length) % bannerArray.length;
    localStorage.setItem('currEventIndex', currEventIndex);

    initializeBanner();
}

function nextBanner() {
    var currEventIndex = parseInt(localStorage.getItem('currEventIndex'), 0); 
    var bannerArray = JSON.parse(localStorage.getItem('bannerArray')) || [];

    currEventIndex = (currEventIndex + 1) % bannerArray.length;
    localStorage.setItem('currEventIndex', currEventIndex);

    initializeBanner();
}



</script>



{% if imageDataArray | length != 0 %}
    <div id="hola" style="z-index: 9999; position: absolute; top: 52px; right: 50%; transform: translate(50%, -50%); text-align: center; display: none;"> 
        <div style="display: grid; grid-template-columns: 1fr;">
            <!-- Placeholder for image -->
            <img id="bye"
                alt="Banner"
                class="club-banners"
                src="" 
            />
        <div id="bannerNavigation" style="display: inline-flex; justify-content: center; margin: 0px">
            <div style="display: inline-flex; background-color: lightgray; border: 1px solid black; border-radius: 5px;">

                <button id="prevButton" style="border: none; background: none; cursor: pointer;">
                    Prev
                </button>

                <button id="nextButton" style="border: none; background: none; cursor: pointer;">
                     Next
                </button>

                <button id="closeButton" style="border: none; background: none; cursor: pointer;">
                     Close
                </button>

                <button id="removeButton" style="border: none; background: none; cursor: pointer;">
                     Remove
                </button>

                <button id="inquireButton" style="border: none; background: none; cursor: pointer;">
                     See More
                </button>
            </div>
        </div>
        </div>
    </div>

{{ include('banner/BiggerBanner.twig') }}

{% endif %}
