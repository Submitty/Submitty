{# Setup for Histogram of Total Scores #}
<div id = "total-score-histogram" class = "page-content">

    <br>
    <input style='width: auto' type='text' id='bucket-size-total' name='bucket-val' value="" aria-label="Enter bucket size" placeholder="Enter bucket size" />
    <input name="sub-tot" class="btn btn-primary key_to_click" tabindex="0" id="submit_bucket" value="Submit Bucket Size for Total" onclick="createNewBuckets(rangeT,betterBuckets,xValueT,yValue,xBuckets,mode,modeCount,maxT,minT)"/>

    <div id="myDiv"><!-- Plotly chart will be drawn inside this DIV --></div>

    <script>
        var betterBuckets = new Map();
        var buttonLayerHeight = 1.0;
        var ct = 0;
        var maxT = 0;
        var minT = {{ overall_total }} + 50;
        var median = 0;
        var mode = 0;
        var modeCount = 0;
        var rangeT = 0;

        var xValueT = [{{ histograms['bTA'] | join(',') }}];
        xValueT.sort((a, b) => a - b);
        var yValue = [];
        var yValue2 = [];
        var xBuckets = [];

        if (xValueT.length > 0) {
            minT = xValueT[0];
            maxT = xValueT[xValueT.length-1];
            rangeT = maxT - minT;
            let pivot = Math.floor((xValueT.length - 1) / 2);
            if (xValueT.length % 2 === 0) {
                median = (xValueT[pivot] + xValueT[pivot+1]) / 2;
            }
            else {
                median = xValueT[pivot];
            }
        }

        mode = fillBucketsForRange(rangeT, betterBuckets, xValueT, yValue, xBuckets, mode, modeCount, maxT, minT);

        if (maxT==0 && minT==50) {
            minT=0;
        }

        var trace1 = {
            x: xBuckets,
            y: yValue,
            mode: 'markers',
            name: 'Students with Each Score',
            type: 'bar',
            text: yValue,
            textposition: 'auto',
            hoverinfo: 'none',
            marker: {
                color: 'rgb(48,99,152)',
                opacity: 1.0,
                line: {
                    color: 'rbg(170,170,170)',
                    width: 1.5
                }
            }
        };

        var data = [trace1];

        var layout = {
            title: 'Students with Each Score',
            xaxis: {
                title: 'Scores'
            },
            yaxis:{
                title: 'Number of Students'
            },
            barmode: 'overlay',
            font: {
                family: '"Source Sans Pro", sans-serif',
            }
        };

            Plotly.newPlot('myDiv', data, layout, {displayModeBar: false,displaylogo: false});
    </script>
        
    <div id="mySmallDiv">
        <script>
            document.write('<b>Mean: </b>'+{{ overall_average.getAverageScore() }}+'&nbsp&nbsp&nbsp&nbsp'+'<b>Mode: </b>'
            +mode+'&nbsp&nbsp&nbsp&nbsp'+'<b>Median: </b>'+median+'&nbsp&nbsp&nbsp&nbsp'+ '<b>Maximum: </b>'+maxT+
            '&nbsp&nbsp&nbsp&nbsp'+'<b>Minimum: </b>'+minT+'&nbsp&nbsp&nbsp&nbsp'+'<b>Standard Deviation: </b>'+
            {{ overall_average.getStandardDeviation()  }}+'&nbsp&nbsp&nbsp&nbsp'+'<b>Range: </b>'+rangeT);
        </script>
    </div>
    <br />
    Version Conflicts: {{ histograms['VerConf'] }}
    <br />
    No Submissions: {{ histograms['noSub'] }}
    <br />
    No Active Versions: {{ histograms['noActive'] }}
    <br />
    Grade Inquiries: {{ histograms['GradeInq'] }}
    <br />
    Incomplete Grading: {{ histograms['IncompGrading'] }}
    <br />
    Cancelled Submissions: {{ histograms['cancelledSub'] }}
    <br/>
    <br/>
    Double-click on the chart to zoom out
    <hr>
</div>
