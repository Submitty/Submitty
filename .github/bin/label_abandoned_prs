import json
import subprocess
import datetime
from datetime import date, timedelta
import pytz

pr_json = "gh pr list --json updatedAt,labels,number,comments"
string = subprocess.check_output(pr_json, shell=True, text=True)
output = json.loads(string)
eastern = pytz.timezone('US/Eastern')
today = datetime.datetime.now()
d = datetime.timedelta(days = 14)
a = today - d
a = str(a)
year = int(a[0:4])
month = int(a[5:7])
day = int(a[8:10])
twoWeeks = date(year, month, day)

for x in output:
    already_warned = 0
    string = x['updatedAt']
    for comment in x['comments']:
        if comment['body'] == 'This PR has been inactive (no commits and no review comments) for 12 days. If there is no new activity in the next 48 hours, this PR will be labeled as Abandoned PR - Needs New Owner and either another developer will finish the PR or it will be closed.':
            already_warned = 1
    json_time = datetime.datetime.fromisoformat(string.replace('Z', '+00:00'))
    et_time_update = json_time.astimezone(eastern)
    pr_year = int(str(et_time_update)[0:4])
    pr_month = int(str(et_time_update)[5:7])
    pr_day = int(str(et_time_update)[8:10])
    prDate = date(pr_year, pr_month, pr_day)
    number = str(x['number'])
    delta =  prDate - twoWeeks
    numDays = int(str(delta)[0:2])
    already_stale = 0
    already_abandoned = 0
    for labels in x['labels']:
        if(labels['name'] == 'Abandoned PR - Needs New Owner'):
            already_abandoned = 1
    if((numDays == 2 and already_stale == 0 and already_warned == 0)):
        subprocess.run(['gh', 'pr', 'comment', number, '--body', 'This PR has been inactive (no commits and no review comments) for 12 days. If there is no new activity in the next 48 hours, this PR will be labeled as Abandoned PR - Needs New Owner and either another developer will finish the PR or it will be closed.'])
    if((numDays == 0 and already_stale == 0) or (numDays == 2 and already_warned == 1)):
        subprocess.run(['gh', 'pr', 'edit', number, '--add-label', 'Abandoned PR - Needs New Owner'])
