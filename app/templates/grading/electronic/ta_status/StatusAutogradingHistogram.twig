{# Graph Setup for Autograding #}

<div id="autograding-score-histogram" class="page-content">
    <br>
    <input style='width: auto' type='text' id='bucket-size-auto' name='bucket-val' value="" placeholder="Enter bucket size" />
    <input name = "sub-auto" class="btn btn-primary key_to_click" tabindex="0" id="submit_bucket_auto" value="Submit Bucket Size for Auto" onclick="createNewBuckets(rangeA,buckets,xValue,yValue,xBuckets,mode,modeCount,maxA,minA)"/>
    <div id="myDiv3"><!-- Plotly chart will be drawn inside this DIV --></div>
    <script>
        var buckets = new Map();
        var buttonLayerHeight = 1.0;
        var ct = 0;
        var maxA = 0;
        var minA = {{ overall_total }} + 50;
        var median = 0;
        var mode = 0;
        var modeCount = 0;
        var rangeA = 0;

        var xValue = [];
        var yValue = [];
        var xBuckets = [];

        xValue = [{{ histograms['bAuto'] | join(',') }}]
        xValue.sort((a, b) => a - b);
        if (xValue.length > 0) {
            minA = xValue[0];
            maxA = xValue[xValue.length - 1];
            let pivot = Math.floor((xValue.length - 1) / 2);
            if (xValue.length % 2 === 0) {
                median = (xValue[pivot] + xValue[pivot+1]) / 2;
            }
            else {
                median = xValue[pivot];
            }
        }

        if (maxA!=0 && minA!=50) {
            rangeA = maxA-minA;
        }

        mode = fillBucketsForRange(rangeA,buckets,xValue,yValue,xBuckets,mode,modeCount,maxA,minA);

        if (minA==50 && maxA==0) {
            minA=0;
        }

        var trace1 = {
            x: xBuckets,
            y: yValue,
            name: 'Students with Each Score',
            mode: 'markers',
            type: 'bar',
            text: yValue,
            textposition: 'auto',
            hoverinfo: 'none',
            marker: {
                color: 'rgb(48,99,152)',
                opacity: 1.0,
                line: {
                    color: 'rbg(170,170,170)',
                    width: 1.5
                }
            }
        };

        var data = [trace1];

        var layout = {
            title: 'Students with Each Score',
            barmode: 'overlay',
            xaxis: {
                title: 'Scores'
            },
            yaxis:{
                title: 'Number of Students'
            },
            font: {
                family: '"Source Sans Pro", sans-serif',
            }
        };

        Plotly.newPlot('myDiv3', data, layout, {displayModeBar: false,displaylogo: false});

    </script>
    <div id="mySmallDiv3">
        <script>
            document.write('<b>Mean: </b>'+{{ autograded_average.getAverageScore() }}+'&nbsp&nbsp&nbsp&nbsp'+'<b>Mode: </b>'
            +mode+'&nbsp&nbsp&nbsp&nbsp'+'<b>Median: </b>'+median+'&nbsp&nbsp&nbsp&nbsp'+ '<b>Maximum: </b>'+maxA+
            '&nbsp&nbsp&nbsp&nbsp'+'<b>Minimum: </b>'+minA+'&nbsp&nbsp&nbsp&nbsp'+'<b>Standard Deviation: </b>'+
            {{ autograded_average.getStandardDeviation()  }}+'&nbsp&nbsp&nbsp&nbsp'+'<b>Range: </b>'+rangeA);
        </script>
    </div>

    <br />
    Version Conflicts: {{ histograms['VerConf'] }}
    <br />
    No Submissions: {{ histograms['noSub'] }}
    <br />
    No Active Versions: {{ histograms['noActive'] }}
    <br />
    Grade Inquiries: {{ histograms['GradeInq'] }}
    <br />
    Incomplete Grading: {{ histograms['IncompGrading'] }}
    <br />
    Cancelled Submissions: {{ histograms['cancelledSub'] }}
    <br/>
    <br/>
    Double-click on the chart to zoom out
    <hr>
</div>
