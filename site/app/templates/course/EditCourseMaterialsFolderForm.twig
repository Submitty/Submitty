{% extends 'generic/Popup.twig' %}
{% block popup_id %}edit-course-materials-folder-form{% endblock %}
{% block title %}Edit Course Material Folder{% endblock %}
{% block body %}
    <div id="material-folder-edit-form" class="flex-col flex-col-space" data-directory = "Check">
        <p>NOTE: Sorting rank will edit the rank of the folder only.</p>
        <label>
            <span>
                <strong>Sorting rank (lower value = higher position):</strong>
            </span>
            <input id="edit-folder-sort" value="Check" type="text" size="26"/>
        </label>
        <hr>
        <p>NOTE: All below fields will apply to all files in all sub-folders rather than the folder!</p>
        <fieldset id="edit_folder_sections">
            <legend class="black-message">
                Do you want to restrict this course material to some sections?
            </legend>
            <label class = "radio">
                <input id = "all-sections-showing-no-folder" name="show-some-section-selection-edit" type = "radio" onchange="toggleRegistrationSectionsFolderEdit(); enableFullUpdate()" checked>
                No
            </label>
            <label class = "radio">
                <input id = "all-sections-showing-yes-folder" name="show-some-section-selection-edit" type = "radio" onchange="toggleRegistrationSectionsFolderEdit(); enableFullUpdate()">
                Yes
            </label>
            <br>
            <div id = "show-some-section-selection-folder-edit" class= "show-some-section-selection" style="display: none">
            {% for section in reg_sections %}
                <div class = "reg-section-item">
                    <input id="section-folder-edit-{{section['sections_registration_id']}}" type="checkbox" value="off" onchange="enableFullUpdate()"/>
                    <label for="section-folder-edit-{{section['sections_registration_id']}}">Section {{ section['sections_registration_id'] }}</label>
                </div>
            {% endfor %}
            </div>
            <script>
                function toggleRegistrationSectionsFolderEdit(){
                    $("#show-some-section-selection-folder-edit").toggle();
                }
            </script>
        </fieldset>
        <p style="margin: 0px;">
            <em>Note: Gray colored sections (if any) represent that some (but not all) materials inside this folder are restricted to those sections.</em>
        </p>
        <label>
            <span>
                <strong>Choose a time to release the files being uploaded:</strong>
            </span>
            <input id="edit-folder-picker" class="edit-folder-picker" type="text" size="26" onchange="enableFullUpdate()"><br>
            <span><em>Note: Everyone with grading access will be able to view all the materials irrespective of the release date/time.</em></span>
        </label>
        <label>
            <input id="hide-folder-materials-checkbox-edit" type="checkbox" onchange="handleHideMaterialsChange()">
            Hide from Students<br>
            <em>Note: Hidden course materials are omitted from the course materials directory listing; however, these materials can still be accessed via the URL.</em>
        </label>
        <script>
            function handleHideMaterialsChange() {
                enableFullUpdate();
                handleHideMaterialsCheckboxChange('hide-folder-materials-checkbox-edit');
            }
        </script>
        <input type="hidden" name="csrf_token" value="{{ csrf_token }}" />
    </div>
    <script>
        function submitFolderEdit(fullUpdate){ // Submit button
            let sectionsEdit = [];
            let partialSections = [];
            let cmTime = document.getElementById("edit-folder-picker").value;
            let sort = document.getElementById("edit-folder-sort").value;
            let id = document.getElementById("material-folder-edit-form").getAttribute("data-id");
            let hideFromStudents = 'off';
            const hideMaterialsCheckbox = $("#hide-folder-materials-checkbox-edit");
            if  (hideMaterialsCheckbox.is(':checked'))  {
                hideFromStudents = 'on';
                if (hideMaterialsCheckbox.hasClass('partial-checkbox')) {
                    hideFromStudents = null;
                }
            }

            let reg_sectionArray = JSON.parse('{{ reg_sections|json_encode|raw }}');
            let sections_lock = document.getElementById('all-sections-showing-yes-folder').checked === true;
            if (sections_lock) {
                reg_sectionArray.forEach(function(element){
                    let currentSectionEdit = '#section-folder-edit-' +element['sections_registration_id']
                    if  ($(currentSectionEdit).is(':checked')) {
                        if ($(currentSectionEdit).attr('class') === 'partial-checkbox') {
                            partialSections.push(element['sections_registration_id']);
                        }
                        else {
                            sectionsEdit.push(element['sections_registration_id']);
                        }
                    }
                });
            }
            if({{ reg_sections|json_encode|raw }} === null || $("#all-sections-showing-no-folder").is(':checked') === true){
                sectionsEdit = null;
                partialSections = null;
            }
            handleEditCourseMaterials("{{ csrf_token }}", hideFromStudents, id, sectionsEdit, partialSections, cmTime, sort, sections_lock, fullUpdate, null, null);
        };

        function enableFullUpdate() {
            let submit = $('#submit-folder-edit-full');
            submit.attr('disabled', false);
        }

        function disableFullUpdate() {
            let submit = $('#submit-folder-edit-full');
            submit.attr('disabled', true);
        }

        flatpickr('.edit-folder-picker', {
            plugins: [ShortcutButtonsPlugin(
                    {
                        button: [
                            {
                                label: "Beginning of time"
                            },
                            {
                                label: "Now"
                            },
                            {
                                label: "Tomorrow"
                            },
                            {
                                label: "End of time"
                            }

                        ],
                        onClick: (index, fp) => {
                            let date;
                            switch (index) {
                                case 0:
                                    date = new Date("1001-01-01 00:00:00");
                                    break;
                                case 1:
                                    date = new Date();
                                    break;
                                case 2:
                                    date = new Date();
                                    date.setDate(date.getDate() + 1);
                                    break;
                                case 3:
                                    date = new Date("9998-01-01 00:00:00");
                                    break;
                            }
                            fp.setDate(date);
                        }
                    }
            )],
            allowInput: true,
            enableTime: true,
            enableSeconds: true,
            time_24hr: true,
            dateFormat: "Y-m-d H:i:S",
            onReady: (a, b, fp) => {
                fp.calendarContainer.firstChild.childNodes[1].firstChild.firstChild.setAttribute('aria-label', 'Month');
                fp.calendarContainer.childNodes[2].childNodes[4].firstChild.setAttribute('aria-label', 'Seconds');
            }
        });
    </script>
{% endblock %}
{% block buttons %}
    {{ block('close_button') }}
    <input class="btn btn-primary" id="submit-folder-edit" type="submit" value="Set Folder Sorting Rank" onclick = "submitFolderEdit(false);"/>
    <input class="btn btn-primary" id="submit-folder-edit-full" type="submit" value="Apply Recursive Updates" disabled onclick="submitFolderEdit(true);">
{% endblock %}
