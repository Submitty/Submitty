{#
************************
    --- WHEN UPDATING THIS FILE MAKE SURE TO ALSO UPDATE site/public/templates/misc/MarkdownArea.twig ---
                   This is necessary for site/public/templates/grading/OverallComment.twig and any other future pages that have have MarkdownArea.twig included 
                   in a template that is located in the public directory (common in TAGrading)
    --- IMPORTANT: When adding new variables to this file, be sure to update the array in site/app/view/MarkdownView.php
                   THIS IS NECESSARY for the Notebook Builder and any other future pages that fetch the MarkdownArea.twig template via AJAX
************************
    class: a string with classes separated by a space to be applied to the markdown textarea
    data_previous_comment: specifically for use in OverallComment.twig
    initialize_preview: if true, will trigger the onclick event for the Preview button/tab (see below) 
                        as soon as the DOM is ready
    markdown_area_id: REQUIRED, sets the id of the edit markdown textarea
    markdown_area_name: optional, but be careful make sure to maintain preexisting names
                        when converting forms to use this template otherwise they might not work
                        if the names are important for form data collection
    markdown_area_value: initial value for markdown textarea to have
    markdown_header_id: id for the span holding the markdown_buttons
    max_height: max height for preview div, if not defined there is no max height
    min_height: min height for preview div, if not defined the min height is 100px
    no_maxlength: if true, the markdown textarea will support holding up to 524288 characters
                  which is the default maximum for most browsers. Otherwise, the max number of characters
                  is 5000.
                  NOTE: If this variable is true, it will overwrite any value given in 
                        textarea_maxlength (see below)
    onclick: REQUIRED, name of function to be executed when Preview button/tab is clicked
                ex. onclick : 'previewMyPageMarkdown'
                IMPORTANT: THIS FUNCTION MUST RECIEVE 'mode' AS ITS LAST ARGUMENT. 
                            See site/public/js/forum.js and polls.js for examples.
                NOTE: If you would like to pass other arguments besides 'mode' to your onclick 
                      function, you must use Function.prototype.bind. 
                      ex. onclick : 'previewMyPageMarkdown.bind(this, myArg1, myArg2, ...)
                      See site/public/js/notebook_builder/widgets/markdown-widget.js or
                          site/public/templates/grading/OverallComment.twig for examples
    other_textarea_attributes: optional, string containing any custom attributes you want the textarea to have.
                               (doesn't work very reliably, consider just adding more variables)
                               The string should not have attribute values wrapped in quotes
                                ex. "other_textarea_attributes": "required onkeyup='doSomething()'" <----- BAD
                                    "other_textarea_attributes": "required onkeyup=doSomething()" <----- GOOD
    placeholder: placeholder text for the markdown textarea
    preview_div_id: technically optional, but giving an id makes getting the div in the
                    onclick event much easier
    render_header: boolean, whether or not to render the header. This should generally always be set to true
                unless there is a case where there is an accompanying markdown toggle (such as on the
                discussion forum)
    root_class: a string with classes separated by a space to be applied to the root node of the MarkdownArea.twig
                template (aka the outermost div with the 'markdown-area' class)
    textarea_maxlength: sets maxlength attribute of markdown textarea. If not set and no_maxlength (see above) is not set,
                        the maxlength will be 5000.
    textarea_onchange: event handler for onchange event of the markdown textarea
    textarea_onkeyup: event handler for onkeyup event of the markdown textarea
    textarea_onpaste: event handler for onpaste event of the markdown textarea
#}
<div class="markdown-area fill-available {{ root_class|default('') ? root_class : '' }}">
    <div {{ markdown_header_id is defined ? 'id=' ~ markdown_header_id: ''}}  class="markdown-area-header" style="display: {{ render_header|default(false) ? "flex" : "none" }}" data-mode="edit">
        <div class="markdown-mode-buttons">
            <button title="Edit Markdown" type="button" onclick="previewMarkdown.call(this, 'edit')" class="markdown-mode-tab markdown-write-mode active key_to_click">Write</button>
            <button title="Preview Markdown" type="button" onclick="previewMarkdown.call(this, 'preview')" class="markdown-mode-tab markdown-preview-mode key_to_click" tabindex="0" data-initialize-preview="{{initialize_preview|default(false)}}">
                Preview
            </button>
        </div>
        <div class="markdown-area-toolbar">
            <a target="_blank" href="https://submitty.org/student/communication/markdown">
                <i style="font-style:normal;" class="fa-question-circle"></i>
            </a>
            <button type="button" title="Insert a link" onclick="addMarkdownCode.call($('#{{ markdown_area_id }}'), 'link')" class="btn btn-default btn-markdown btn-markdown-link key_to_click"  tabindex="0">Link <i class="fas fa-link fa-1x"></i></button>
            <button title="Insert a code segment" type="button" onclick="addMarkdownCode.call($('#{{ markdown_area_id }}'), 'code')" class="btn btn-default btn-markdown btn-markdown-code key_to_click"  tabindex="0">Code <i class="fas fa-code fa-1x"></i></button>
            <button title="Insert bold text" type="button" onclick="addMarkdownCode.call($('#{{ markdown_area_id }}'), 'bold')" class="btn btn-default btn-markdown btn-markdown-bold key_to_click"  tabindex="0">Bold <i class="fas fa-bold fa-1x"></i></button>
            <button title="Insert italic text" type="button" onclick="addMarkdownCode.call($('#{{ markdown_area_id }}'), 'italic')" class="btn btn-default btn-markdown btn-markdown-italic key_to_click"  tabindex="0">Italics <i class="fas fa-italic fa-1x"></i></button>
        </div>
    </div>
    <div class="markdown-area-body">
        {# visual indicator for loading preview, extra divs are necessary (see markdown.css) #}
        <div class="markdown-preview-load-spinner"><div></div><div></div><div></div><div></div></div>
        <label for="{{ markdown_area_id }}" tabindex="-1" class="screen-reader">{{ markdown_area_id }}</label>
        {% include "misc/AccessibilityMessage.twig" %}
        <textarea
            id="{{ markdown_area_id }}"
            class="markdown-textarea fill-available {{ class is defined ? class }}"
            name="{{ markdown_area_name is defined ? markdown_area_name : "markdown_area" }}"
            {% if placeholder is defined %}
                placeholder="{{ placeholder }}"
            {% endif %}
            rows="10" cols="30"
            {# 524288 characters is the default max length for text input fields #}
            maxlength="{{ (no_maxlength|default(null) ? '524288' : (textarea_maxlength|default(null) ? textarea_maxlength :'5000'))}}"
            {% if textarea_onchange is defined %}
                onchange="{{ textarea_onchange }}"
            {% endif %}
            {% if textarea_onkeydown is defined %}
                onkeydown="{{ textarea_onkeydown }}"
            {% endif %}
            {% if textarea_onkeyup is defined %}
                onkeyup="{{ textarea_onkeyup }}"
            {% endif %}
            {% if textarea_onpaste is defined %}
                onpaste="{{ textarea_onpaste }}"
            {% endif %}
            data-previous-comment="{{ data_previous_comment is defined ? data_previous_comment : '' }}"
            {% if other_textarea_attributes is defined %}
                {{ other_textarea_attributes }}
            {% endif %}
        >{{ markdown_area_value is defined ? markdown_area_value : '' }}</textarea>
        {# if min_height or max_height aren't defined, use values defined in markdown.css #}
        <div id="{{ preview_div_id }}" class="fill-available markdown-preview" style="min-height:{{ min_height is defined ? min_height : "100px" }}; max-height:{{ max_height is defined ? max_height : "300px" }}" hidden></div>
    </div>
</div>
<script>
    $('#{{markdown_area_id}}').ready(function() {
        enableTabsInTextArea("#{{markdown_area_id}}");
        const markdown_area = $('#{{markdown_area_id}}').closest('.markdown-area')
        markdown_area.find('[data-initialize-preview="1"]').trigger('click');
    });
    $('.markdown-mode-tab').on('click', function(){
        $(this).addClass('active');
        const markdown_area = $(this).closest('.markdown-area');
        markdown_area.find('.markdown-mode-tab').not(this).removeClass('active');
    });
</script>