<div id="submission_browser" class="rubric_panel" data-gradeable-id="{{gradeable_id}}" data-anon-submitter-id="{{anon_submitter_id}}">
    <div >
        <div id="directory_view">
            <span style="line-height: 40px;">
                <span class="grading_label">Submissions and Results Browser</span>
                <button class="btn btn-default expand-button" data-linked-type="submissions" data-clicked-state="wasntClicked" id="toggleSubmissionButton">Open/Close Submissions</button>

                {# check if there are vcs files, if yes display the toggle button, else don't display it #}
                {% if has_vcs_files %}
                    <button class="btn btn-default expand-button" data-linked-type="checkout" data-clicked-state="wasntClicked"  id="togglCheckoutButton">Open/Close Checkout</button>
                {% endif %}

                <button class="btn btn-default expand-button" data-linked-type="results" data-clicked-state="wasntClicked"  id="toggleResultButton">Open/Close Results</button>

                <script>
                    $(document).ready(function(){
                        //note the commented out code here along with the code where files are displayed that is commented out
                        //is intended to allow open and close to change dynamically on click
                        //the problem is currently if you click the submissions folder then the text won't change b/c it's being double clicked effectively.
                        $(".expand-button").on('click', function(){
                            openAll( 'openable-element-', $(this).data('linked-type'))
                        })

                        var currentCodeStyle = localStorage.getItem('theme');
                        var currentCodeStyleRadio = (currentCodeStyle == null || currentCodeStyle == "light") ? "style_light" : "style_dark";
                        $('#' + currentCodeStyleRadio).parent().addClass('active');
                        $('#' + currentCodeStyleRadio).prop('checked', true);
                    });
                </script>
                <button class="btn btn-default key_to_click" tabindex="0" onclick="downloadSubmissionZip('{{  gradeable_id }}','{{ anon_submitter_id }}', {{ active_version }}, null, true)">Download Zip File</button>

                <span style="padding-right: 10px"> <input aria-label="Auto open" type="checkbox" id="autoscroll_id" onclick="updateCookies();" class="key_to_click" tabindex="0"> <label for="autoscroll_id">Auto open</label> </span>
            </span>
            <br />
            {# Files #}
            <div class="inner-container open" id="file-container" style="padding-top: 10px;">
                {{ _self.display_files(submissions, "s", 0, "submissions") }}
                {% if has_vcs_files %} {# if there are checkout files, then display folder, otherwise don't #}
                    {{ _self.display_files(checkout, "c", 0, "checkout") }}
                {% endif %}
                {% if not student_grader %}
                    {{ _self.display_files(results, "r", 0, "results") }}
                    {{ _self.display_files(results_public, "rp", 0, "results_public") }}
                {% endif %}
            </div>
            {# /Files #}
        </div>
        {% include "grading/electronic/FileView.twig" with {
            "panel": "submission",
            "panelTitle": "Submissions and Results Browser",
            "file_view_id": "file-view",
            "grading_file_name_id": "grading_file_name",
            "save_status_id": "save_status",
            "file_content_id": "file-content",
            "show_pdf_bar": true
        } %}
    </div>
</div>

{% macro display_files(files, id, indent, title) %}
    {# Files on top #}
    {% for dir, path in files|filter((path,dir) => path is not iterable) %}
        {{ _self.display_file(dir, path, id ~ "f" ~ loop.index, indent, title) }}
    {% endfor %}

    {# Directories underneath #}
    {% for dir, path in files|filter((path,dir) => path is iterable) %}
        {{ _self.display_dir(dir, path, id ~ "d" ~ loop.index, indent, title) }}
    {% endfor %}
{% endmacro %}

{% macro display_file(dir, path, id, indent, title) %}
    <div>
        <div class="file-viewer">
            <a class='openAllFile{{ title }} openable-element-{{ title }} key_to_click' file-url="{{ path|url_encode }}" onclick='openFrame("{{ dir|e('js') }}", "{{ path|e('js') }}", "{{ id }}"); updateCookies();' data-viewer_id="{{ id }}">
                <span class="fas fa-plus-circle" style='vertical-align:text-bottom;'></span>
                {{ dir }}</a> &nbsp;
            <a id = 'open_file_{{ dir|url_encode }}' onclick='popOutSubmittedFile("{{ dir|url_encode }}", "{{ path|url_encode }}")' aria-label="Pop up the file in a new window" class="key_to_click" tabindex="0"><i class="fas fa-window-restore" title="Pop up the file in a new window"></i></a>
            <a onclick='viewFileFullPanel("{{ dir|e('js') }}", "{{ path|e('js') }}")' aria-label="Show file in full panel" class="key_to_click" tabindex="0"><i class="fas fa-share" title="Show file in full panel"></i></a>
            <a onclick='downloadFile("{{ path|url_encode }}", "{{ title }}")' aria-label="Download the file" class="key_to_click" tabindex="0"><i class="fas fa-download" title="Download the file"></i></a>
        </div>
        <div id="file_viewer_{{ id }}" style="margin-left:{{ indent * -15 }}px" data-file_name="{{ dir }}" data-file_url="{{ path }}"></div>
    </div>
{% endmacro %}

{% macro display_dir(dir, contents, id, indent, title) %}
    <div>
        <div class="div-viewer">
            <a class='openAllDiv openAllDiv{{ title }} openable-element-{{ title }} key_to_click' id='{{ dir }}' onclick='openDiv("{{ id }}"); updateCookies();' data-viewer_id="{{ id }}">
                <span class="fas fa-folder open-all-folder" style='vertical-align:text-top;'></span>
                {{ dir }}
            </a>
        </div>
        <br/>
        <div id='div_viewer_{{ id }}' style='margin-left:15px; display: none' data-file_name="{{ dir }}">

            {# Recurse #}
            {{ _self.display_files(contents, id, indent + 1, title) }}

        </div>
    </div>
{% endmacro %}
