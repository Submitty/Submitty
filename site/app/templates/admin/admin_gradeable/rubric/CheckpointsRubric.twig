<div id="gradeable_rubric">
    <label for="numeric_num-items">Number of checkpoint items</label> 
    <input style="width: 50px" id="numeric_num-items" name="num_numeric_items" type="text" value="0" class="int_val ignore"/>
    &emsp;&emsp;
    <label for="numeric_num_text_items">Number of text items</label> 
    <input style="width: 50px" id="numeric_num_text_items" name="num_text_items" type="text" value="0" class="int_val ignore"/>
    <br /> <br />

    <div class="multi-field-wrapper-checkpoints">
        <h5>Checkpoint Items</h5>
        <table class="table-striped checkpoints-table table table-bordered">
            <thead>
                <tr>
                    <th> Label </th>
                    <th> Extra Credit? </th>
                </tr>
            </thead>
            <tbody>
                <tr class="multi-field" id="mult-field-0" style="display:none;">
                    <td>
                        <input style="width: 200px" name="checkpoint_label_0" aria-label="checkpoint 0" type="text" class="checkpoint_label" value="Checkpoint 0"/>
                    </td>
                    <td>
                        <input type="checkbox" name="checkpoint_extra_0" aria-label="is checkpoint 0 counted as extra credit?" class="checkpoint_extra extra" value="true" />
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <br />

    <div class="multi-field-wrapper-text">
        <h5>Text Items</h5>
        <table class="table-striped text-table table table-bordered">
            <thead>
                <tr>
                    <th> Label </th>
                </tr>
            </thead>
            <tbody>
                <tr class="multi-field" id="mult-field-0" style="display:none;">
                    <td>
                        <input style="width: 200px" name="text_label_0" aria-label="label for text item 0" type="text" class="text_label" value="0"/>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
<br />

<script>
$(document).ready(function() {
    let numCheckpoints = 0; // Initialize checkpoint and text items count
    let numText = 0;
    const MAX_TEXT_ITEMS = 5; // Max text items

    function addCheckpoint(label, extra_credit) {
        var wrapper = $('.checkpoints-table tbody');
        numCheckpoints++;
        var newRow = $('#mult-field-0', wrapper).clone(true).appendTo(wrapper).attr('id', 'mult-field-' + numCheckpoints);
        newRow.find('.checkpoint_label').val(label).focus();
        newRow.find('.checkpoint_label').attr('name', 'checkpoint_label_' + numCheckpoints).attr('aria-label', 'checkpoint ' + numCheckpoints);
        newRow.find('.checkpoint_extra').attr('name', 'checkpoint_extra_' + numCheckpoints).prop('checked', extra_credit).attr('aria-label', 'extra credit for checkpoint ' + numCheckpoints);
        newRow.show();
    }

    function addText(label) {
        var wrapper = $('.text-table tbody');
        numText++;
        $('#mult-field-0', wrapper).clone(true).appendTo(wrapper).attr('id', 'mult-field-' + numText).find('.text_label').val(label).focus();
        $('#mult-field-' + numText, wrapper).find('.text_label').attr('name', 'text_label_' + numText).attr('aria-label', 'label for text item ' + numText);
        $('#mult-field-' + numText, wrapper).show();
    }

    // How many checkpoint items? field change
    $('#numeric_num-items').on('change', function() {
        var requestedCheckpoints = parseInt(this.value) || 0;
        if (requestedCheckpoints < 1) {
            displayErrorMessage('There must be at least one checkpoint.');
            requestedCheckpoints = 1;
            $(this).val(1);
        }

        if (requestedCheckpoints < 0) {
            requestedCheckpoints = 0;
        }

        while (numCheckpoints < requestedCheckpoints) {
            addCheckpoint('Checkpoint ' + (numCheckpoints + 1), false);
        }
        while (numCheckpoints > requestedCheckpoints) {
            $('#mult-field-' + numCheckpoints, '.checkpoints-table').remove();
            --numCheckpoints;
        }

        saveRubric(false);
    });


// Handle "How many text items?" field change with limit of 5
    $('#numeric_num_text_items').on('change', function() {
        var requestedText = parseInt(this.value) || 0;

        // Check if requested text items exceed the limit
        if (requestedText > MAX_TEXT_ITEMS) {
            alert("You can only add a maximum of " + MAX_TEXT_ITEMS + " text items.");
            $(this).val(MAX_TEXT_ITEMS);
            requestedText = MAX_TEXT_ITEMS;
        }

        if (requestedText < 0) {
            requestedText = 0;
        }

        while (numText < requestedText) {
            addText('');  // Empty label for text items
        }
        while (numText > requestedText) {
            $('#mult-field-' + numText, '.text-table').remove();
            --numText;
        }

        saveRubric(false);
    });

    let components = {{ gradeable_components_enc|raw }};
    $.each(components, function(i, elem) {
        if (elem.text === false) {
            let is_extra_credit = elem.max_value == 0;
            addCheckpoint(elem.title, is_extra_credit);
        } else {
            addText(elem.title);
        }
    });

    $('#numeric_num-items').val(numCheckpoints );
    $('#numeric_num_text_items').val({{ num_text_components }});
});
</script>
